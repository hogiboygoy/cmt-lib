//==============================================================================
//              Cooperative MultiTasking system
//                    CMT system
// By Alexander Sibilev
//==============================================================================
#ifndef CMT_ST_MEMS_H
#define CMT_ST_MEMS_H

//! ћикросхемы ST MEMS
struct CmtStMems {
  CmtSpiPipeBase *mSpi;
  
  //!  онструктор по умолчанию
  CmtStMems( CmtSpiPipeBase *spi ) : mSpi(spi) {}
  
  void WrAdr( uint8 adr );
  
  //! «апись в регистр
  /*! ¬ыполн€ет запись значени€ в регистр микросхемы по заданному адресу регистра
    \param adr - адрес регистра
    \param val - значение регистра
    \return прин€тый байт данных на этапе передачи данных */
  uint8 WrReg8( uint8 adr, uint8 val );

  //! «апись в пару регистров
  /*! ¬ыполн€ет запись значени€ в пару смежных регистров микросхемы по заданному адресу регистра
    \param adr - адрес регистра
    \param val - значение регистра */
  void WrReg16( uint8 adr, uint16 val );
  
  //! „тение из регистра
  /*! ¬ыполн€ет чтение значени€ из регистра микросхемы по заданному адресу регистра
    \param adr - адрес регистра
    \return прин€тый байт из регистра */
  uint8 RdReg8( uint8 adr );
  
  //! „тение из пары регистров
  /*! ¬ыполн€ет чтение значени€ из двух смежных регистров микросхемы по заданному адресу регистра
    \param adr - адрес регистра
    \return прин€тые значени€ из регистров */
  uint16 RdReg16( uint8 adr );
  
  };

#endif
